@using Microsoft.Extensions.Configuration
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model AdmissionDto;
@{
}

@inject IConfiguration Configuration
<script type="text/javascript">
    function select_onchange(value) {

        const commonUrl = @Json.Serialize(@Configuration.GetSection("MainAPI").GetSection("APIURL").Value);
        var itenNo = document.getElementById("item").value;
        var settings = {
            "url": commonUrl + "Items/GetItemByID?Id=" + itenNo,
            "method": "GET",
            "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json"
            },
        };

        $.ajax(settings).done(function (response) {
            console.log(response);
            console.log(response.price);
            document.getElementById("txtPrice").value = response.price.toFixed(2);

            var qty = document.getElementById("txtQty").value;
            var price = document.getElementById("txtPrice").value;
            amount = qty * price;
            document.getElementById("txtAmount").value = amount.toFixed(2);

        });
    }
     function updateAmount() {
        var price = parseFloat($("#txtPrice").val()) || 0;
        var qty = parseFloat($("#txtQty").val()) || 0;
        var totalAmount = price * qty;
        $("#txtAmount").val(totalAmount.toFixed(2));
    }
     let itemList = [];

        function addItem() {
        var drugDropdown = document.getElementById("item");
        var selectedDrugId = drugDropdown.value;
        var selectedDrugName = drugDropdown.options[drugDropdown.selectedIndex].text;

        var price = parseFloat(document.getElementById("txtPrice").value) || 0;
        var qty = parseFloat(document.getElementById("txtQty").value) || 0;
        var amount = price * qty;

        if (selectedDrugId == 0) {
            alert("Please select a valid drug.");
            return;
        }
        if (qty <= 0) {
            alert("Please enter a valid quantity.");
            return;
        }

        const AdmissionId = $("#custId").val();

        console.log('list qty:', qty);
        console.log('list price:', price);
        console.log('list Amount:', amount);

        // ✅ Check if item already exists in the list
        let existingItem = itemList.find(item => item.ItemId == selectedDrugId);

        if (existingItem) {
            // ✅ Update existing item's Qty and Amount
            existingItem.Qty += qty;
            existingItem.Amount = existingItem.Qty * existingItem.Price;

            // ✅ Update row in the table
            $(`#row_${selectedDrugId} td:eq(1)`).text(existingItem.Qty.toFixed(2)); // Qty column
            $(`#row_${selectedDrugId} td:eq(3)`).text(existingItem.Amount.toFixed(2)); // Amount column

        } else {
            // ✅ Add new item if not exist
            let newItem = {
                AdmissionId: AdmissionId,
                ItemId: selectedDrugId,
                DrugName: selectedDrugName,
                Price: price,
                Qty: qty,
                Amount: amount
            };
            itemList.push(newItem);

            // ✅ Append new row to the table
            const newRow = `
                <tr id="row_${selectedDrugId}">
                    <td>${selectedDrugName}</td>
                    <td>${qty.toFixed(2)}</td>
                    <td>${price.toFixed(2)}</td>
                    <td>${amount.toFixed(2)}</td>
                    <td>
                        <button type="button" class="btn btn-danger btn-sm" onclick="removedrug(${selectedDrugId})">Remove</button>
                    </td>
                </tr>
            `;
            $("#tempConsultantTable tbody").append(newRow);
        }

        // ✅ Clear input fields after adding/updating the drug
        $("#item").val(0);
        $("#txtQty").val("1.00");
        $("#txtPrice").val("1.00");
        $("#txtAmount").val("0.00");
    }


    function removedrug(id) {
        // Remove from the list
        itemList = itemList.filter(drug => drug.ItemId != id);

        // Remove row from table
        $(`#row_${id}`).remove();
    }
     function saveItem() 
     {
        if (itemList.length === 0) {
            alert("No Drugs to save.");
            return;
        }
         console.log('length:', itemList.length);
         console.log('list:', itemList);
        $.ajax({
            type: "POST",
            url: "/Admission/CreateAdmissionItems",
            contentType: 'application/json',
            data: JSON.stringify(itemList),
            success: function (response) {
                 alert('Items saved successfully!');
                itemList = [];
                

          
            // ✅ Clear all rows except the header
            const table = document.getElementById('tempConsultantTable');
            const rowCount = table.rows.length;
            for (let i = rowCount - 1; i > 0; i--) { // loop from last row to first (skip header)
                table.deleteRow(i);
            }

            // ✅ Optionally, clear input fields
            $("#drugus").val(0);
            $("#txtQty").val("1.00");
            $("#txtPrice").val("1.00");
            $("#txtAmount").val("0.00");
               ShowShiftDetails(@Model.AdmissionsId) // Navigate  to Admission
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
      }

</script>

<div class="modal-content">
    <div class="modal-header">
        <h4 class="modal-title" id="myLargeModalLabel">Add Item  </h4>
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true" onclick="ShowShiftDetails(@Model.AdmissionsId)">×</button>
    </div>
    <div class="modal-body">
        <form asp-action="CreateAdmissionItems" method="post">
        <input type="hidden" id="custId" asp-for="AdmissionsId">
            <div class="row">
           

                <div class="col-md-4">
                    <div class="form-group">
                        <label for="companyName">Type</label>
                        <select class="form-control ddlSearchList" asp-for="AdmissionItem.Type" s" id="cars">
                            <option value="1">PH. Drugs</option>
                            <option value="2">Thearter Drugs</option>
                            <option value="3">OT Drugs</option>
                            <option value="4">Other</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="form-group">
                        <label for="companyName">Name of Item </label>
                        <select class="form-control ddlSearchList" onchange="javascript:select_onchange(this.value);" asp-for="AdmissionItem.ItemId" id="item">
                            <option value="0">Name of Item</option>
                            @foreach (var item in Model.Items)
                            {
                                <option value="@item.Id">@item.ItemName - @item.ItemCategory.ItemCategoryName</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="companyName">Qty </label>
                        <input class="form-control " id="txtQty" onkeyup="updateAmount();" asp-for="AdmissionItem.Qty" value="1.00" type="text" placeholder="Qty" />
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="companyName">Price</label>
                        <input class="form-control " id="txtPrice" type="text" value="1.00" asp-for="AdmissionItem.Price" placeholder="Price" />
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        <label for="companyName">Amount</label>
                        <input class="form-control " type="text" id="txtAmount" value="1.00" asp-for="AdmissionItem.Amount" placeholder="Amount" disabled />
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        <button type="button" class="btn btn-success" onclick="addItem()">Add Item</button>
                    </div>
                </div>
                <div class="table-responsive">
                    <table id="tempConsultantTable" class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>Item Name</th>
                                <th>Qty</th>
                                <th>Price</th>
                                <th>Amount</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>


            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger waves-effect text-left" data-dismiss="modal" onclick="ShowShiftDetails(@Model.AdmissionsId)">Close</button>
                <button type="button" class="btn  waves-effect btn-primary" onclick="saveItem()"><i class="fa fa-save"></i>&nbsp;Save</button>
            </div>
        </form>
    </div>
    <div class="modal-footer">
        <div class="col-md-12">
            <div class="table-responsive">
                <table id="myTable" class="table table-striped table-bordered dataTable fonts-12" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th>Item Name</th>
                            
                            <th>Qty</th>
                            <th>Price</th>
                            <th>Amount</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id="tblBodyPayments">
                        @foreach (var item in Model.AdmissionItemsList)
                        {
                            <tr>


                                <td>@item.Item.ItemName</td>

                                <td>@item.Qty</td>

                                <td>@item.Price</td>
                                <td>@item.Amount</td>

                                <td>
                                    @if (Model != null)
                                    {

                                        @using (Html.BeginForm("DeleteAdmissionItems", "Admission", new { Id = @item.Id }, FormMethod.Post))
                                        {

                                            <button id='link_copy' class='btn waves-effect waves-light btn-xs btn-danger'><i class='fa fa-trash'></i></button>

                                        }
                                    }

                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>