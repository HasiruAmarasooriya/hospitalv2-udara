@model AdmissionDto;
@{
    Layout = null;
}

}
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
   

    <!-- jQuery Validation Plugin -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <!-- Select2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />

    <!-- Select2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <style>
    
    </style>
    
     </head>
    <body>
    <div class="modal-content">
        <div class="modal-header">
            <h4 class="modal-title" id="myLargeModalLabel">Add/Edit Admission</h4>
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true" onclick="location.reload()">×</button>
        </div>
        <form asp-action="AddNewAdmission" method="post" id="form">
            <div class="modal-body">
                <input class="form-control" type="hidden" id="AdmissionID" asp-for="Admissions.Id" />

                <!-- Patient Details Section -->
                <input class="form-control" type="hidden" id="txtPatientID" asp-for="Admissions.Patient.Id" placeholder="BP" />
                <div class="card mb-3">
                    <div class="card-header bg-success text-white">
                        <h5 class="card-title">Patient Details</h5>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="companyName" hidden>B.H.T No</label>
                            <input class="form-control" asp-for="Admissions.BHTNumber" type="hidden" id="txtFullName" placeholder="Pt's Full Name" />
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-8">
                                <div class="form-group">
                                    <label for="companyName">Patient Full Name</label>
                                    <input class="form-control" type="text" id="txtPatientName" asp-for="Admissions.Patient.FullName" placeholder="Patient Name" />

                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="companyName">Mobile Number </label>
                                    <input class="form-control" pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}" type="tel" maxlength="10" minlength="10" id="txtMobileNumber" placeholder="Mobile Number" asp-for="Admissions.Patient.MobileNumber" />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="companyName">NIC Number </label>
                                    <input class="form-control" type="text" id="txtNICNumber" placeholder="NIC Number" asp-for="Admissions.Patient.NIC" />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="companyName">Address  </label>
                                    <input class="form-control" type="text" id="txtPatientAdd" placeholder="Address" asp-for="Admissions.Patient.Address" />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="companyName">Sex</label>
                                    <select class="form-control ddlSearchList" id="dropSex" asp-for="Admissions.Patient.Sex">
                                        <option value="0">Select one</option>
                                        <option value="1">Male</option>
                                        <option value="2">Female</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="companyName">Age</label>
                                    <input class="form-control" type="number" id="txtAge" placeholder="Age" asp-for="Admissions.Patient.Age" disabled />
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="companyName">Months</label>
                                    <input class="form-control" type="number" id="txtMonths" placeholder="Months" asp-for="Admissions.Patient.Months" disabled />
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="companyName">Days</label>
                                    <input class="form-control" type="number" id="txtDays" placeholder="Days" asp-for="Admissions.Patient.Days" disabled />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="companyName">Name of Guardian</label>
                                    <input class="form-control" type="text" id="txtGuardian" asp-for="Admissions.Guardian" placeholder="Name of Guardian" />
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="companyName">Room No</label>
                                    <select class="form-control" asp-for="Admissions.RoomId" id="appbundle_items_accountdebet">
                                        <option value="0">Select Rooms</option>
                                        @foreach (var item in Model.Rooms)
                                        {
                                            <option value="@item.Id">@item.Name</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="companyName">Consultant</label>
                                    <select class="form-control ddlSearchList" asp-for="Admissions.ConsultantId" id="consultants">
                                        <option value="0">Select Consultant</option>
                                        @foreach (var item in Model.Consultants)
                                        {
                                            <option value="@item.Id">@item.Name - @item.Specialist.Name</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="companyName">Date Time Admission</label>
                                    <input type="text" id="date-format" asp-for="Admissions.DateAdmission" asp-format="{0:dd.MM.yyyy hh:mm}" class="form-control" placeholder="Saturday 24 June 2017 - 21:44">
                                </div>
                                @*<div class="form-group">

                                <select class="form-control ddlSearchList" asp-for="Admissions.PatientId" id="patients">
                                    <option value="0">Select Patient</option>
                                    @foreach (var item in Model.Patients)
                                    {
                                        <option value="@item.Id">@item.FullName - ( @item.NIC )</option>
                                    }
                                </select>
                            </div>*@
                            </div>

                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="companyName">Temp</label>
                                    <input class="form-control" type="text" id="txtTemp" asp-for="Admissions.Temp" placeholder="Temp" />
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="companyName">Pulse</label>
                                    <input class="form-control" type="text" id="txtPluse" asp-for="Admissions.Pluse" placeholder="Pulse" />
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="companyName">Resp</label>
                                    <input class="form-control" type="text" id="txtResp" asp-for="Admissions.Resp" placeholder="Resp" />
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="companyName">Weight</label>
                                    <input class="form-control" type="text" id="txtWeight" asp-for="Admissions.Weight" placeholder="Weight" />
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="companyName">BP</label>
                                    <input class="form-control" type="text" id="txtBP" asp-for="Admissions.BP" placeholder="BP" />
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="form-group">
                                    <label for="companyName">Details</label>
                                    <textarea class="form-control" asp-for="Admissions.Details" cols="40" rows="5" placeholder="Details"></textarea>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>

                <!-- Hospital Charges Section -->
                <div class="card mb-3">
                    <div class="card-header bg-success text-white">
                        <h5 class="card-title">Hospital Charges</h5>
                    </div>

                    <div class="card-body">
                        <div class="row">

                            <div class="col-md-6 col-sm-12">
                                <div class="form-group">
                                    <label for="Hospitalfee">Hospital Charges</label>
                                    <select class="form-control ddlSearchList" id="Hospitalfee" onchange="updateAmount()">
                                        <option value="0">Select Hospital Fee</option>
                                        @foreach (var item in Model.HospitalFees)
                                        {
                                            <option value="@item.Id" data-price="@item.Price">@item.Name - Rs: @item.Price</option>
                                        }
                                    </select>

                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label for="companyName">Price</label>
                                    <input class="form-control" type="text" id="txtPrice" readonly value="0.00" />
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label for="companyName">&nbsp;</label>
                                    <button type="button" id="addButton" class="btn btn-success btn-block" onclick="addHospitalFee()">Add</button>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <table id="tblHospitalFees" class="table table-striped table-bordered">
                                    <thead>
                                        <tr>
                                            <th>Fee Name</th>
                                            <th>Price</th>
                                            <th>Action</th>
                                           
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model.Charges != null)
                                        {
                                            foreach (var item in Model.Charges)
                                            {
                                                <tr data-fee-id="@item.HospitalFeeId">
                                                    <td>@item.ItemName</td>
                                                    <td>@item.Price.ToString("0.00")</td>
                                                    <td>@item.Amount.ToString("0.00")</td>
                                                    <td>
                                                        <button type="button" class="btn btn-danger btn-sm" onclick="removeHospitalFee(this)">Remove</button>
                                                    </td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>

                        </div>
                    </div>
                </div>
                @if (Model.Admissions != null)
                {
                    <!-- Medical Actions Section -->
                    <div class="card mb-3">
                        <div class="card-header bg-success text-white">
                            <h5 class="card-title">Medical Actions</h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="d-flex justify-content-between">



                                        <button type="button" class="btn btn-success " onclick="AddDrugusToAdmission(@Model.Admissions.Id)">Drugs</button>
                                        <button type="button" class="btn btn-success " onclick="AddItemsToAdmission(@Model.Admissions.Id)">Items</button>
                                        <button type="button" class="btn btn-success " onclick="AddInvestigationToAdmission(@Model.Admissions.Id)">Investigations</button>
                                        <button type="button" class="btn btn-success " onclick="AddConsultantToAdmission(@Model.Admissions.Id)">Consultants</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal" onclick="location.reload()">Close</button>

                @if (Model.Admissions == null || Model.Admissions.paymentStatus != HospitalMgrSystem.Model.Enums.PaymentStatus.PAID)
                {
                    <button type="button" class="btn waves-effect btn-primary" onclick="submitForm()">
                        <i class="fa fa-save"></i>&nbsp;Save
                    </button>
                }
                @if (Model.Admissions != null && Model.Admissions.paymentStatus != HospitalMgrSystem.Model.Enums.PaymentStatus.NOT_PAID && Model.Admissions.Discription != "Discharged")
                {
                    <button type="button" class="btn waves-effect btn-warning" onclick="discharge(@Model.Admissions.Id)">
                        <i class="fas fa-wheelchair"></i>&nbsp;Discharge
                    </button>
                }
            </div>

        </form>
    </div>
    
       
        <script>

                     $(document).ready(function () {
            $("#form").validate({
                rules: {
                    "Admissions.Patient.FullName": {
                        required: true,
                        minlength: 3
                    },
                    "Admissions.Patient.MobileNumber": {
                        required: true,
                        digits: true,
                        minlength: 10,
                        maxlength: 10
                    },
                    "Admissions.Patient.NIC": {
                        required: true,
                        minlength: 10,
                        maxlength: 12
                    },
                    "Admissions.Patient.Address": {
                        required: true
                    },
                    "Admissions.Patient.Sex": {
                        required: true
                    }
              
                },
                messages: {
                    "Admissions.Patient.FullName": {
                        required: "Please enter patient full name",
                        minlength: "Name should have at least 3 characters"
                    },
                    "Admissions.Patient.MobileNumber": {
                        required: "Please enter a mobile number",
                        digits: "Only numbers are allowed",
                        minlength: "Mobile number must be 10 digits",
                        maxlength: "Mobile number must be 10 digits",
                        ValidityState:"Is valid"
                    },
                    "Admissions.Patient.NIC": {
                        required: "Please enter NIC",
                        minlength: "NIC should be at least 10 characters",
                        maxlength: "NIC should not exceed 12 characters"
                    },
                    "Admissions.Patient.Address": {
                        required: "Please enter an address"
                    },
                    "Admissions.Patient.Sex": {
                        required: "Please select sex"
                    },
                    "Admissions.RoomId": {
                        required: "Please select a room",
                        min: "Please select a valid room"
                    },
                    "Admissions.ConsultantId": {
                        required: "Please select a consultant",
                        min: "Please select a valid consultant"
                    },
                    "Admissions.DateAdmission": {
                        required: "Please enter admission date",
                        date: "Enter a valid date"
                    }
                },
                errorElement: "div",
                errorPlacement: function (error, element) {
                    error.addClass("text-danger");
                    error.insertAfter(element);
                },
                submitHandler: function (form) {
                    // This will be called only if the form is valid
                    submitForm();
                }
            });
        });

                 // Listen for changes (or blur) on the NIC input field
             $("#txtNICNumber").on("blur", function () {
                 var nic = $(this).val().trim();
                    if (!nic) 
                    {
                        resetAgeFields();
                        return;
                    }

                 var birthDate;
                 // Old NIC format (e.g., 123456789V)
                 if (nic.length === 10) {
                     var year = parseInt("19" + nic.substr(0, 2));
                     var dayText = nic.substr(2, 3);
                     var dayOfYear = parseInt(dayText);
                     // For females the day number is offset by 500
                     if (dayOfYear > 500) {
                         dayOfYear -= 500;
                     }
                     // Create a date starting from January 1 of the calculated year
                     birthDate = new Date(year, 0); // month 0 is January
                     birthDate.setDate(dayOfYear);
                 }
                 // New NIC format (e.g., 200012345678)
                 else if (nic.length === 12) {
                     var year = parseInt(nic.substr(0, 4));
                     var dayText = nic.substr(4, 3);
                     var dayOfYear = parseInt(dayText);
                     if (isNaN(dayOfYear) || dayOfYear === 0) 
                     {
                        resetAgeFields();
                        return;
                     }
                     if (dayOfYear > 500) {
                         dayOfYear -= 500;
                     }
                     birthDate = new Date(year, 0);
                     birthDate.setDate(dayOfYear);
                 } 
                 else {
                     console.log("Invalid NIC format");
                      resetAgeFields();
                     return;
                 }
                 if (isNaN(birthDate.getTime())) 
                   {
                     console.log("Invalid date derived from NIC");
                     resetAgeFields();
                        return;
                   }
                 fillAgeFields(birthDate);
             });
             function resetAgeFields() 
             {
                $("#txtAge").val(0);
                $("#txtMonths").val(0);
                $("#txtDays").val(0);
             }
             function fillAgeFields(birthDate) {
                 var today = new Date();
                 var ageYears = today.getFullYear() - birthDate.getFullYear();
                 var ageMonths = today.getMonth() - birthDate.getMonth();
                 var ageDays = today.getDate() - birthDate.getDate();

                 // Adjust days and months if needed
                 if (ageDays < 0) {
                     ageMonths--;
                     // Get the last day of the previous month
                     var prevMonth = new Date(today.getFullYear(), today.getMonth(), 0);
                     ageDays += prevMonth.getDate();
                 }
                 if (ageMonths < 0) {
                     ageYears--;
                     ageMonths += 12;
                 }

                 // Autofill the form fields with calculated values
                 $("#txtAge").val(ageYears);
                 $("#txtMonths").val(ageMonths);
                 $("#txtDays").val(ageDays);
             }
             let FeeList = [];
             function close(){
                 location.reload();
             }
             function updateAmount() {
                 const selectedFee = $("#Hospitalfee").find(":selected");
                 const price = parseFloat(selectedFee.data("price")) || 0;
                 $("#txtPrice").val(price.toFixed(2));
             }

             function addHospitalFee() {
                 const selectedFee = $("#Hospitalfee").find(":selected");
                 const feeName = selectedFee.text();
                 const feeId = selectedFee.val();
                 const price = parseFloat($("#txtPrice").val()) || 0;

                 if (feeId === "0" || price <= 0) {
                     alert("Please select a valid hospital fee and quantity.");
                     return;
                 }

                FeeList.push({
                     FeeId: feeId,
                     FeeName: feeName,
                     Qty: 1,
                     Price: price
                 });

                 const newRow = `
                     <tr data-fee-id="${feeId}">
                         <td>${feeName}</td>
                         <td>${price.toFixed(2)}</td>
                         <td><button type="button" class="btn btn-danger btn-sm" onclick="removeHospitalFee(this)">Remove</button></td>
                     </tr>
                 `;
                 $("#tblHospitalFees tbody").append(newRow);

                 $("#Hospitalfee").val("0");
                 $("#txtPrice").val("0.00");
             }

             function removeHospitalFee(button) {
                 const row = $(button).closest("tr");
                 const feeId = row.data("fee-id");
                 row.remove();
                 FeeList = FeeList.filter(fee => fee.FeeId !== feeId);
             }

            function submitForm() {
                 console.log("Submit form called");
                if ($("#form").valid()) {
                    console.log("Form is valid");
                  let formObject = {
                     Admissions: {
                         Id: $("#AdmissionID").val() || 0,
                         BHTNumber: $("#txtFullName").val(),
                         DateAdmission: $("#date-format").val(),
                         RoomId: $("#appbundle_items_accountdebet").val(),
                         ConsultantId: $("#consultants").val(),
                         Guardian: $("#txtGuardian").val(),
                         Temp: $("#txtTemp").val(),
                         Pluse: $("#txtPluse").val(),
                         Resp: $("#txtResp").val(),
                         Weight: $("#txtWeight").val(),
                         BP: $("#txtBP").val(),
                         Details: $("textarea[name='Admissions.Details']").val(),
                         PatientId:$("#txtPatientID").val() || 0

                     },
                     Patient: {

                         FullName: $("#txtPatientName").val(),
                         MobileNumber: $("#txtMobileNumber").val(),
                         Sex: $("#dropSex").val(),
                         Age: $("#txtAge").val(),
                         Months: $("#txtMonths").val(),
                         Days: $("#txtDays").val(),
                         NIC: $("#txtNICNumber").val(),
                         Address: $("#txtPatientAdd").val()
                     },
                     HospitalFeeList: FeeList,
                     SearchValue: "",
                     TotalAmount: FeeList.reduce((total, fee) => total + fee.Price, 0),
                     CreatedUserName: 1, // Assuming this is hardcoded for now
                     ModifiedUserName: 1 // Assuming this is hardcoded for now
                 };

                 console.log("Form object", formObject);

                 $.ajax({
                     url: "/Admission/AddNewAdmission",
                     type: "POST",
                     contentType: "application/json",
                     data: JSON.stringify(formObject),
                     success: function (response) {
                         console.log("Submission successful!", response);
                         location.reload();
                     },
                     error: function (error) {
                         console.error("Error submitting form", error);
                     }
                 });
                }

             }
        </script>
   
    </body>
</html>


