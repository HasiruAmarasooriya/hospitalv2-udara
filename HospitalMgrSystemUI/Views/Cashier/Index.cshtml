@using HospitalMgrSystem.Model.Enums
@using Microsoft.Extensions.Configuration

@model CashierDto;
@{
}
@inject IConfiguration Configuration
<script src="https://cdn.jsdelivr.net/npm/jsbarcode@3.11.6/dist/JsBarcode.all.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // Function to read cookies
       
        function getCookie(name) {
            const value = "; " + document.cookie;
            const parts = value.split("; " + name + "=");
            if (parts.length === 2) return parts.pop().split(";").shift();
            return null;
        }

        // Function to delete cookies
        function deleteCookie(name) {
            document.cookie = name + "=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";
        }

        function PrintInvoice(preId) {
            console.log("PrintInvoice function triggered with preId:", preId);
            const numericPreID = preId.replace(/\D/g, '');
            JsBarcode("#barcodeSvg", numericPreID, {
	format: "CODE128",
	// width: 2, // Width of the bars (change to make the barcode narrower)
	// height: 40, // Height of the barcode (adjust as needed)
	displayValue: true // Whether to display the barcode's value below it
});
            console.log("PrintInvoice function triggered with preId:", numericPreID);
            $.ajax({
                type: "POST",
                url: "/Cashier/PrintInvoice",
                data: JSON.stringify({ PreID: preId }),
                contentType: "application/json; charset=utf-8",
                dataType: "html",
                success: function (response) {
                    const printWindow = window.open('', '_blank', 'width=600,height=600,location=no,menubar=no');
                    printWindow.document.open();
                    printWindow.document.write(response);
                    var barcodeSvg = document.getElementById("barcodeSvg").outerHTML;
                    printWindow.document.write('<div id="barcode">' + barcodeSvg + '</div>');
                    printWindow.document.close();

                    // Clear cookies after printing
                    printWindow.onafterprint = function () {
                        deleteCookie("printFlag");
                        deleteCookie("preId");
                        printWindow.close();
                    };

                    printWindow.print();
                },
                error: function (response) {
                    console.error("Error in PrintInvoice AJAX call:", response.responseText);
                }
            });
        }

        // Check cookies and trigger print if printFlag is set to true
        const printFlag = getCookie("printFlag");
        const preId = getCookie("preId");
        if (printFlag === "true") {
            console.log("Conditions met for printing; initiating PrintInvoice...");
            PrintInvoice(preId);
        } else {
            console.log("Conditions not met for printing. Check printFlag and preId values.");
        }
    });

	const commonUrl = @Json.Serialize(@Configuration.GetSection("MainAPI").GetSection("APIURL").Value);
	var originalPrice = 0;
   
	var priceAfterDiscount = 0;
	var isDiscountApplied = false;
    // $(document).ready(function () {
    //     Get PreID from the URL
    //     const urlParams = new URLSearchParams(window.location.search);
    //     const preId = urlParams.get('PreID');

    //     if (preId) {
    //         Call printInvoice function with preId
    //         printInvoice(preId);
    //     }
    // });


	window.onload = (event) => {
		var urlParams = new URLSearchParams(window.location.search);
		var id = urlParams.get('id');

		console.log(id)

		// Set focus to the input field with id 'preID'
		document.getElementById('preID').focus();
		
		originalPrice = document.getElementById("totalID").value;
	};

	document.addEventListener('keydown', function (event) {
		if (event.key === "Tab") {
			// If the element currently focused is not `cashID`, focus on `cashID`
			if (document.activeElement.id !== "cashID") {
				event.preventDefault(); // Prevent default tabbing behavior
				document.getElementById("cashID").focus();
			} else {
				// Allow normal tabbing after `cashID` has been focused
				document.removeEventListener('keydown', arguments.callee);
			}
		}
	});


	document.addEventListener('keydown', function (event) {
		// You can change 'Enter' to any key you want to trigger the function
		if (event.key === 'Enter') {
			// Call your function here
			PrintInvoice();
		}

		if (event.key === 'Escape') {
			// Call your function for Escape key
			ClearCashier();
		}
            if (event.key === 'F2') {

                     window.location.href = '/Channeling/Index';
             }
	});


	function disableButton(button) {
		// Disable the button to prevent double submission
		button.disabled = true;

		// Optionally, you can change the button text to indicate that it's processing
		button.innerText = 'Processing & Printing';

		// Submit the form
		button.form.submit();
	}

	function onChangeDiscount() {
		var checkbox = document.getElementById("discount");
		var availableDiscount = document.getElementById("availableDiscountPrice").value;
		var discountApplied = !!checkbox.checked;

		// Update the hidden input field or property bound to asp-for="discountEnabled"
		document.getElementById("discountEnabled").value = discountApplied;
		
		if (discountApplied) {
			isDiscountApplied = true;

			if (availableDiscount > 0) {
				var discount = availableDiscount;
				priceAfterDiscount = originalPrice - discount;

				document.getElementById("discountPrice").value = discount;
				document.getElementById("totalID").value = priceAfterDiscount;
			} else {
				alert("Discount not found");
				document.getElementById("discount").checked = false;
			}
		} else {
			isDiscountApplied = false;
			document.getElementById("discountPrice").value = 0;
			document.getElementById("totalID").value = originalPrice;
		}
		
	}

	function select_onchange_payments() {

		var total = document.getElementById("totalID").value;
		var cash = document.getElementById("cashID").value || 0
		var crediCard = document.getElementById("creditID").value || 0;
		var debitiCard = document.getElementById("debitID").value || 0;
		var cheque = document.getElementById("chequeID").value || 0;
		var giftCard = document.getElementById("giftcardID").value || 0;
		var paymentSubTotal = parseFloat(cash) + parseFloat(crediCard) + parseFloat(debitiCard) + parseFloat(cheque) + parseFloat(giftCard);
		var dueAmount = total - paymentSubTotal;
		document.getElementById("totalPaidAmountID").value = paymentSubTotal;
		document.getElementById("dueAmountID").value = dueAmount;
	}
	// JavaScript function to print the invoice when the button is clicked
	function printSilently() {
		// Create a hidden iframe
		var iframe = document.createElement('iframe');
		iframe.style.visibility = 'hidden';
		iframe.style.position = 'absolute';
		document.body.appendChild(iframe);

		// Get the HTML content of the invoice page
		var htmlContent = document.documentElement.outerHTML;

		// Set the content of the iframe to the invoice page
		iframe.contentDocument.open();
		iframe.contentDocument.write(htmlContent);
		iframe.contentDocument.close();

		// Wait for the iframe content to load
		iframe.onload = function () {
			// Call the print function of the iframe
			iframe.contentWindow.print();

			// Remove the iframe after printing is done
			document.body.removeChild(iframe);
		};
	}
	function AddOPDToAdmission(id) {

		$.ajax({
			type: "POST",
			url: "/Cashier/AddOPDsToOPD/" + id,
			data: '{customerId: 100 }',
			contentType: "application/json; charset=utf-8",
			dataType: "html",
			success: function (response) {
				$("#AddEditContainerModel").html(response);
				$("#AddShiftModel").modal('show');

				$("#drugus").select2({
					width: '100%',
					height: "auto !important",
					dropdownCssClass: "bigdrop",
					dropdownParent: $('#AddShiftModel')
				});
			},
			failure: function (response) {
				alert(response.responseText);
			},
			error: function (response) {
				alert(response.responseText);
			}



		});

	}


	function AddDrugusToAdmission(id) {

		$.ajax({
			type: "POST",
			url: "/Cashier/AddDrugusToOPD/" + id,
			data: '{customerId: 100 }',
			contentType: "application/json; charset=utf-8",
			dataType: "html",
			success: function (response) {
				$("#AddEditContainerModel").html(response);
				$("#AddShiftModel").modal('show');

				$("#drugus").select2({
					width: '100%',
					height: "auto !important",
					dropdownCssClass: "bigdrop",
					dropdownParent: $('#AddShiftModel')
				});
			},
			failure: function (response) {
				alert(response.responseText);
			},
			error: function (response) {
				alert(response.responseText);
			}



		});

	}
   
	function AddInvestigationToAdmission(id) {

		$.ajax({
			type: "POST",
			url: "/Cashier/AddInvestigationToOPD/" + id,
			data: '{customerId: 100 }',
			contentType: "application/json; charset=utf-8",
			dataType: "html",
			success: function (response) {
				$("#AddEditContainerModel").html(response);
				$("#AddShiftModel").modal('show');

				$("#investigation").select2({
					width: '100%',
					height: "auto !important",
					dropdownCssClass: "bigdrop",
					dropdownParent: $('#AddShiftModel')
				});
			},
			failure: function (response) {
				alert(response.responseText);
			},
			error: function (response) {
				alert(response.responseText);
			}
		});

	}

	function AddItemsToAdmission(id) {

		$.ajax({
			type: "POST",
			url: "/Cashier/AddItemsToOPD/" + id,
			data: '{customerId: 100 }',
			contentType: "application/json; charset=utf-8",
			dataType: "html",
			success: function (response) {
				$("#AddEditContainerModel").html(response);
				$("#AddShiftModel").modal('show');

				$("#item").select2({
					width: '100%',
					height: "auto !important",
					dropdownCssClass: "bigdrop",
					dropdownParent: $('#AddShiftModel')
				});
			},
			failure: function (response) {
				alert(response.responseText);
			},
			error: function (response) {
				alert(response.responseText);
			}
		});

	}
    // function saveItemStatus() {
    //     const urlParams = new URLSearchParams(window.location.search);
    //     const printFlag = urlParams.get('print');
    //     const preId = urlParams.get('preId');

    //     console.log("Starting saveItemStatus function, flag:", printFlag);
    //     console.log("PreID:", preId);

    //     Check if the print flag is a string "true" and preId is provided
    //     if (printFlag === "true" && preId) {
    //         PrintInvoice(preId);
    //     }
    // }

    function PrintInvoice(preId) {
		var logoImage = new Image();
		var barcodeImage = new Image();
		var imagesLoaded = 0;


		//logoImage.src = "https://kumuduhospital.com/assets/images/kumudu_logo2.jpg"; // Replace with your actual logo URL
		// barcodeImage.src = "https://png.pngtree.com/png-clipart/20220424/original/pngtree-black-and-white-icons-of-barcode-numbers-png-image_7554658.png"; // Replace with your actual barcode URL

		// Callback function to check if all images are loaded
		function checkImagesLoaded() {
			imagesLoaded++;

			if (imagesLoaded === 1) { // You may need to adjust this count if you have more images
				openPrintWindow();
			}
		}

		// Set the load event listeners for the images
		//logoImage.onload = checkImagesLoaded;
		// barcodeImage.onload = checkImagesLoaded;

       

        // function printInvoice(preId) {
        //     var printWindow = window.open('/Cashier/PrintInvoice?PreID=' + preId, '_blank');
        //     printWindow.focus();
        // }



        function openPrintWindow() {
			var preID = document.getElementById("preID").value;
            console.log("preID in JavaScript:", preID);
            var numericPreID = preID.replace(/\D/g, '')
			JsBarcode("#barcodeSvg", numericPreID, {
				format: "CODE128",
				// width: 2, // Width of the bars (change to make the barcode narrower)
				// height: 40, // Height of the barcode (adjust as needed)
				displayValue: true // Whether to display the barcode's value below it
			});

			$.ajax({
				type: "POST",
                url: "/Cashier/PrintInvoice",
				data: JSON.stringify({ PreID: preID }),
				contentType: "application/json; charset=utf-8",
				dataType: "html",
				success: function (response) {
					var printWindow = window.open('', '_blank', 'width=600,height=600,location=no,menubar=no');
					printWindow.document.open();
					printWindow.document.write(response);

					// Add the barcode SVG to the document
					var barcodeSvg = document.getElementById("barcodeSvg").outerHTML;
					printWindow.document.write('<div id="barcode">' + barcodeSvg + '</div>');


					printWindow.document.close();
					var customHeight = 110 * 3.779528; // Convert millimeters to pixels (1mm = 3.779528 pixels)
					printWindow.resizeTo(600, customHeight);
					printWindow.print();
					printWindow.close();
				},
				failure: function (response) {
					alert(response.responseText);
				},
				error: function (response) {
					alert(response.responseText);
				}
			});
		}

		// If the images are already cached, the load event may not fire, so check immediately
		if (logoImage.complete) {
			openPrintWindow();
		}
	}
    
    

    // Call the function on page load
    

	function PrintBill() {
		var logoImage = new Image();
		var barcodeImage = new Image();
		var imagesLoaded = 0;


		logoImage.src = "https://kumuduhospital.com/assets/images/kumudu_logo2.jpg"; // Replace with your actual logo URL
		barcodeImage.src = "https://png.pngtree.com/png-clipart/20220424/original/pngtree-black-and-white-icons-of-barcode-numbers-png-image_7554658.png"; // Replace with your actual barcode URL

		// Callback function to check if all images are loaded
		function checkImagesLoaded() {
			imagesLoaded++;

			if (imagesLoaded === 2) { // You may need to adjust this count if you have more images
				openPrintWindow();
			}
		}

		// Set the load event listeners for the images
		logoImage.onload = checkImagesLoaded;
		barcodeImage.onload = checkImagesLoaded;

		function openPrintWindow() {
			var preID = document.getElementById("preID").value;
			$.ajax({
				type: "POST",
                url: "/Cashier/PrintBill",
				data: JSON.stringify({ PreID: preID }),
				contentType: "application/json; charset=utf-8",
				dataType: "html",
				success: function (response) {
					var printWindow = window.open('', '_blank', 'width=600,height=600,location=no,menubar=no');
					printWindow.document.open();
					printWindow.document.write(response);
					//printWindow.document.getElementsByTagName('body')[0].style.setProperty('width', '600px'); // Set the width as needed
					//printWindow.document.getElementsByTagName('body')[0].style.setProperty('margin', '0'); // Remove any margins
					printWindow.document.close();
					printWindow.print();
					printWindow.close();
				},
				failure: function (response) {
					alert(response.responseText);
				},
				error: function (response) {
					alert(response.responseText);
				}
			});
		}

		// If the images are already cached, the load event may not fire, so check immediately
		if (logoImage.complete && barcodeImage.complete) {
			openPrintWindow();
		}
	}
	function ClearCashier() {
		window.location.href = '/Cashier/Index';
	}

</script>

<div class="row page-titles">
</div>

<div class="row">
<div class="col-8">
<div class="container">
<div class="row">
    <div class="card" style="width: 100%;">
        <div class="card-body">


            @using (Html.BeginForm("Index", "Cashier", FormMethod.Post))
            {
                <div class="d-flex">
                    <div class=" p-2">
                        <input type="text" class="form-control" id="preID" placeholder="Sean of search item..." asp-for="PreID">
                    </div>
                    <div class=" p-2">
                        <button type="submit" class="btn waves-effect waves-light  btn-info">Scan</button>

                        @if (Model != null && Model.ChannelingSchedule != null)
                        {
                            if (Model.ChannelingSchedule.DateTime.Date > DateTime.Today)
                            {
                                <button class="btn btn-danger p-2 ml-2 " disabled>Forward Booking</button>
                            }

                            switch (Model.ChannelingSchedule.scheduleStatus)
                            {
                                case ChannellingScheduleStatus.SESSION_START:
                                    <button class="btn btn-success p-2 ml-2" disabled>@Model.ChannelingSchedule.scheduleStatus</button>
                                    break;

                                case ChannellingScheduleStatus.SESSION_END:
                                    <button class="btn btn-danger p-2 ml-2 " disabled>@Model.ChannelingSchedule.scheduleStatus</button>
                                    break;

                                case ChannellingScheduleStatus.SESSION_CANCEL:
                                    <button class="btn btn-danger p-2 ml-2 " disabled>@Model.ChannelingSchedule.scheduleStatus</button>
                                    break;

                                case ChannellingScheduleStatus.ACTIVE:
                                    <button class="btn btn-primary p-2 ml-2 " disabled>SESSION @Model.ChannelingSchedule.scheduleStatus</button>
                                    break;

                                default:
                                    <button class="btn btn-warning p-2 ml-2 " disabled>SESSION @Model.ChannelingSchedule.scheduleStatus</button>
                                    break;
                            }
                        }
                    </div>
                    <div class="ml-auto p-2">
                        <button type="button" class="btn btn-danger" onclick=ClearCashier();>CANCEL SALE</button>
                        @if (Model != null && Model.PreID != null)
                        {
	                        <input type="hidden" id="opid" asp-for="PreID" value="@Model.PreID">
                            @*<button type="button" id="printButton" onclick=PrintInvoice(); class="btn btn-warning">PRINT</button>*@
                            <button type="button" id="claimBillButton" onclick="PrintBill();" class="btn btn-info">CLAIM BILL</button>
                        }
                    </div>
                </div>
            }
        </div>
    </div>

</div>

<div class="row">
    <div class="col-12 " style="padding:0;">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Items</h4>
                <div class="table-responsive">
                    @if (Model != null)
                    {
                        @if (Model.cashierBillingItemDtoList != null && Model.opd != null)
                        {
                            var itemIds = new List<object>();
                            var billingItemsTypes = new List<object>();

                            decimal cashierBillingItemDtoListTotal = 0;
                            decimal cashierBillingItemDtoListAmountTotal = 0;
                            decimal cashierBillingItemDtoListDiscountTotal = 0;
                            decimal cashierBilledItemDtoListTotal = 0;
                            decimal cashierBilledItemDtoListAmountTotal = 0;
                            decimal cashierBilledItemDtoListDiscountTotal = 0;


                            <table class="table">

                                <thead class="table-success">
                                <tr>
                                    <th>Item</th>
                                    <th>Price</th>
                                    <th>Qty.</th>
                                    <th>Amount</th>
                                    <th>Disc.</th>
                                    <th>Subtotal</th>
                                    <th>Refund</th>
                                </tr>

                                </thead>
                                <tbody>

                                @foreach (var item in Model.cashierBillingItemDtoList)
                                {
                                    @if (item.price != 0)
                                    {
                                        cashierBillingItemDtoListTotal += item.amount;
                                        cashierBillingItemDtoListAmountTotal += (item.price * item.qty);
                                        cashierBillingItemDtoListDiscountTotal += item.discount;
                                        decimal calamount = item.qty * item.price;
                                        <tr>
                                          <td>@item.billingItemName (@item.billingItemsTypeName)</td>
                                          <td>@item.price.ToString("0.00")</td>
                                          <td>@item.qty</td>
                                          <td>@calamount.ToString("0.00")</td>
                                          <td>@item.discount</td>
                                          <td>@item.amount.ToString("0.00")</td>
                                          <td></td>
                                        </tr>
                                    }
                                }

                                @if (Model.cashierBillingItemDtoList.Count > 0)
                                {
                                    <tr class="font-weight-bold">
                                        <td>Total</td>
                                        <td></td>
                                        <td></td>
                                                        <td>@cashierBillingItemDtoListAmountTotal.ToString("0.00")</td>
                                        <td>@cashierBillingItemDtoListDiscountTotal</td>
                                        <td>@cashierBillingItemDtoListTotal</td>
                                        <td></td>
                                    </tr>
                                }

                                @foreach (var item in Model.cashierBilledItemDtoList)
                                {
                                    @if (item.price != 0)
                                    {
                                        cashierBilledItemDtoListTotal += item.amount;
                                        cashierBilledItemDtoListAmountTotal += (item.price * item.qty);
                                        cashierBilledItemDtoListDiscountTotal += item.discount;
                                                        decimal cal = (item.qty * item.price);
                                                        itemIds.Add(item.BillingItemID);
                                        billingItemsTypes.Add(item.billingItemsType);

                                        <tr>
                                            <td>@item.billingItemName (@item.billingItemsTypeName)</td>
                                            <td>@item.price</td>
                                            <td>@item.qty</td>
                                                            <td></td>
                                            <td>@item.discount</td>
                                                            <td>@item.amount.ToString("0.00")</td>
                                            <td>
                                                @if (Model != null)
                                                {
                                                    @if (Model.invoice.paymentStatus != PaymentStatus.OPD && Model.invoice.CreateDate.Date == DateTime.Today)
                                                        @using (Html.BeginForm("RemoveItem", "Cashier", new { Id = @item.BillingItemID, InvoiceType = Model.invoiceType, BillingItemsType = @item.billingItemsType, PreID = Model.PreID, InvoiceID = Model.invoiceID }, FormMethod.Post))
                                                    {
                                                        <button id='link_copy' class='btn waves-effect waves-light btn-xs btn-danger' onclick="return confirm('Are you sure you want to Refund this item?');">Refund</button>
                                                    }
                                                }

                                            </td>
                                        </tr>
                                    }
                                }

                                @if (Model.cashierBilledItemDtoList.Count > 0)
                                {
                                    <tr class="font-weight-bold">
                                        <td>Total</td>
                                        <td></td>
                                        <td></td>
                                                        <td>@cashierBilledItemDtoListAmountTotal.ToString("0.00")</td>
                                        <td>@cashierBilledItemDtoListDiscountTotal</td>
                                                        <td>@cashierBilledItemDtoListTotal.ToString("0.00")</td>
                                        <td></td>
                                    </tr>
                                }


                                </tbody>


                            </table>
                            @if (Model != null && Model.cashierBilledItemDtoList.Count > 0)
                            {
                                @if (Model.invoice.paymentStatus != PaymentStatus.OPD && Model.invoice.CreateDate.Date == DateTime.Today)
                                    @using (Html.BeginForm("RemoveAllItems", "Cashier", new { Id = @itemIds, InvoiceType = Model.invoiceType, BillingItemsType = @billingItemsTypes, PreID = Model.PreID, InvoiceID = Model.invoiceID }, FormMethod.Post))
                                {
                                    <button id='link_copy' class='btn waves-effect waves-light btn-danger' onclick="return confirm('Are you sure you want to Refund All Items?');">Refund All</button>
                                }
                            }
                        }

                        @if (Model?.channel != null)
                        {
                                        decimal calfee = Model.channel.ChannelingSchedule.HospitalFee + Model.channel.ChannelingSchedule.ConsultantFee;
                                        ;
                            <table class="table">
                                <thead class="table-success">
                                <tr>
                                    <th>ID</th>
                                    <th>Pt Name</th>
                                    <th>Doctor Fee</th>
                                    <th>Hospital Fee</th>
                                    <th>Subtotal</th>
                                </tr>

                                </thead>
                                <tbody>

                                <tr>
                                    <td>@Model.channel.Id</td>
                                    <td>@Model.channel.Patient.FullName</td>
                                    <td>@Model.channel.ChannelingSchedule.ConsultantFee</td>
                                    <td>@Model.channel.ChannelingSchedule.HospitalFee</td>
                                                    <td>@calfee.ToString("0.00")</td>
                                </tr>


                                </tbody>
                            </table>
                        }
                    }
                </div>
            </div>
        </div>

    </div>

</div>
@if (Model != null)
{
    @if (Model.cashierRemoveBillingItemDtoList != null && Model.opd != null)
    {
        <div class="row">
            <div class="col-12 " style="padding:0;">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Refund Items</h4>
                        <div class="table-responsive">

                            <table class="table">
                                <thead class="table-success">
                                <tr>
                                    <th>Item</th>
                                    <th>Price</th>
                                    <th>Qty.</th>
                                    <th>Disc.</th>
                                    <th>Subtotal</th>
                                    <th>Delete</th>
                                </tr>

                                </thead>
                                <tbody>


                                @foreach (var item in Model.cashierRemoveBillingItemDtoList)
                                {
                                    <tr>
                                        <td>@item.billingItemName (@item.billingItemsTypeName)</td>
                                        <td>@item.price</td>
                                        <td>@item.qty</td>
                                        <td>@item.discount</td>
                                        <td>@item.amount.ToString("0.00")</td>
                                        <td>
                                            @if (Model != null)
                                            {
                                                @using (Html.BeginForm("AddItem", "Cashier", new { Id = @item.BillingItemID, InvoiceType = Model.invoiceType, BillingItemsType = @item.billingItemsType, PreID = Model.PreID }, FormMethod.Post))
                                                {
                                                    <button id='link_copy' class='btn waves-effect waves-light btn-xs btn-info'>
                                                        <i class='fa fa-plus'></i>
                                                    </button>
                                                }
                                            }

                                        </td>
                                    </tr>
                                }


                                </tbody>
                            </table>

                        </div>
                    </div>
                </div>

            </div>

        </div>
    }
}
<div class="row">
    <div class="col-12 " style="padding:0;">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Payments</h4>
                <div class="table-responsive">
                    <table class="table">
                        <thead class="table-success">
                        <tr>
                            <th>ID</th>
                            <th>Invoice</th>
                            <th>Payment Type</th>
                            <th>Cash</th>
                            <th>Credit Card</th>
                            <th>Debit Card</th>
                            <th>checque</th>
                            <th>Gift Card</th>
                            <th>Total</th>
                        </tr>

                        </thead>
                        <tbody>
                        @if (Model != null)
                        {
                            @if (Model.paymentList != null)
                            {
                                @foreach (var item in Model.paymentList)
                                {
                                    <tr>
                                        <td>@item.Id</td>
                                        <td>@item.InvoiceID</td>
                                        <td>@item.BillingType</td>
                                        <td>@item.CashAmount</td>
                                        <td>@item.CreditAmount</td>
                                        <td>@item.DdebitAmount</td>
                                        <td>@item.ChequeAmount</td>
                                        <td>@item.GiftCardAmount</td>
                                        <td>
                                            @(item.CashAmount + item.CreditAmount + item.DdebitAmount + item.ChequeAmount + item.GiftCardAmount)
                                        </td>
                                    </tr>
                                }
                            }
                        }
                        </tbody>
                    </table>

                </div>
            </div>
        </div>

    </div>

</div>
</div>
</div>
<div class="col-4">
    <div class="card">
        <div class="card-body">

            <div class="table-responsive">
                <form asp-action="AddSale" method="post">
                    <table class="table" style="border-collapse: collapse;">
                        <input type="hidden" asp-for="customerID">
                        <input type="hidden" asp-for="invoiceType">
                        <input type="hidden" asp-for="sufID">
                        <input type="hidden" asp-for="invoiceID">
	                    <input type="hidden" id="availableDiscountPrice" asp-for="AvailableDiscount">
                        <tr>
                            <td>CUSTOMER NAME</td>
                            <td>
                                <input class="form-control " type="text" asp-for="customerName" id="customerNameID" placeholder=""/>
                            </td>
                        </tr>
                        <tr>
                            <td>CONSULTANT NAME</td>
                            <td>
                                <input class="form-control " type="text" asp-for="consaltantName" id="consultantName" disabled/>
                            </td>
                        </tr>
                        @if (Model != null && Model.ChannelingSchedule != null)
                        {
                            <tr>
                                <td>Channeling Schedule</td>
                                <td>
                                    <input class="form-control " type="text" asp-for="ChannelingSchedule.DateTime" id="consultantName" disabled/>
                                </td>
                            </tr>
                        }
                        <tr>
                            <td>SUBTOTAL</td>
                            <td>
                                <input class="form-control " type="text" asp-for="subtotal" id="subtotalID" placeholder="" readonly/>
                            </td>
                        </tr>
                        <tr>
                            <td>DISCOUNT</td>
                            <td>
                                @if (Model != null && Model.opd.paymentStatus != PaymentStatus.NOT_PAID)
                                {
	                                <input class="form-check-input" type="checkbox" asp-for="discountEnabled" id="discount" name="discount" onchange="onChangeDiscount()" disabled/>
                                }
                                else
                                {
	                                <input class="form-check-input" type="checkbox" asp-for="discountEnabled" id="discount" name="discount" onchange="onChangeDiscount()"/>
                                }
	                            
	                            <label class="form-check-label" for="discount">Apply Discount</label>

	                            <!-- Hidden input for discountEnabled -->
	                            <input type="hidden" asp-for="discountEnabled" id="discountEnabled"/>
                            </td>
                        </tr>
                        <tr>
                            <td>DISCOUNT PRICE</td>
                            <td>
                                <input class="form-control " type="text" asp-for="discount" id="discountPrice" placeholder="" readonly/>
                            </td>
                        </tr>
                        <tr>
                            <td style="color:red;">TOTAL</td>
                            <td>
                                <input class="form-control " type="text" asp-for="total" id="totalID" placeholder="" readonly/>
                            </td>
                        </tr>
                        <tr style="font-size: 12px;text-transform: uppercase;text-align: left;font-weight: 600;border-bottom: white;">
                            <td style="border-bottom: 1px solid white; border-right:1px solid #f3f1f1;width:50%">Paid</td>
                            <td style="border-bottom: 1px solid white;">Due</td>
                        </tr>
                        <tr style="font-size:14px;text-align:center;">
                            <td style="border-right:1px solid #f3f1f1">
                                <input class="form-control " type="text" asp-for="totalPaidAmount" id="totalPaidAmountID" placeholder="" readonly/>
                            </td>
                            <td style="color:red;">
                                <input class="form-control " type="text" asp-for="totalDueAmount" id="dueAmountID" placeholder="" readonly/>
                            </td>
                        </tr>

                        <tr>
                            <td style="border-bottom: 1px solid white;" colspan="2" style="text-align:left">ADD PAYMENT</td>

                        </tr>
                        <tr>
                            <td style="border-bottom: 1px solid white;">
                                <span class="label label-success">CASH</span>
                            </td>
                            <td style="border-bottom: 1px solid white;">
                                <b>
                                    <input class="form-control " type="number" asp-for="cash" id="cashID" placeholder="" onkeyup="javascript:select_onchange_payments();" value="0"/>
                                </b>
                            </td>
                        </tr>

                        <tr>
                            <td style="border-bottom: 1px solid white;">
                                <span class="label label-success">CREDIT CARD</span>
                            </td>
                            <td style="border-bottom: 1px solid white;">
                                <b>
                                    <input class="form-control " type="number" asp-for="credit" id="creditID" placeholder="" onkeyup="javascript:select_onchange_payments();" value="0"/>
                                </b>
                            </td>
                        </tr>
                        <tr>
                            <td style="border-bottom: 1px solid white;">
                                <span class="label label-success">DEBIT CARD</span>
                            </td>
                            <td style="border-bottom: 1px solid white;">
                                <b>
                                    <input class="form-control " type="number" asp-for="debit" id="debitID" placeholder="" onkeyup="javascript:select_onchange_payments();" value="0"/>
                                </b>
                            </td>
                        </tr>
                        <tr>

                            <td style="border-bottom: 1px solid white;">
                                <span class="label label-success">CHEQUE</span>
                            </td>
                            <td style="border-bottom: 1px solid white;">
                                <b>
                                    <input class="form-control " type="number" asp-for="cheque" id="chequeID" placeholder="" onkeyup="javascript:select_onchange_payments();" value="0"/>
                                </b>
                            </td>
                        </tr>
                        <tr>
                            <td style="border-bottom: 1px solid white;">
                                <span class="label label-success">GIFT CARD</span>
                            </td>
                            <td style="border-bottom: 1px solid white;">
                                <b>
                                    <input class="form-control " type="number" asp-for="giftCard" id="giftcardID" placeholder="" onkeyup="javascript:select_onchange_payments();" value="0"/>
                                </b>
                            </td>
                        </tr>

                        @if (Model != null)
                        {
                            @if (Model.invoiceID != 0 || Model.total < 0)
                            {
                                <tr class="table-danger">
                                    <td style="border-bottom: 1px solid white;">TOTAL REFUND</td>
                                    <td style="border-bottom: 1px solid white;">
                                        <b>
                                            <input class="form-control danger" type="number" id="giftcardID" placeholder="" value="@(Model.total * -1)" disabled/>
                                        </b>
                                    </td>
                                </tr>

                                @if (Model.invoiceID != 0 && Model.total < 0)
                                {
                                }
                            }
                        }

                    </table>
                    <center>
                        @if (Model != null)
                        {
                            @if (Model.invoiceID == 0 || Model.totalDueAmount > 0)
                            {
                                @if (
                                    Model.userRole == UserRole.CASHIER && ((Model.ChannelingSchedule != null && Model.ChannelingSchedule.scheduleStatus != ChannellingScheduleStatus.SESSION_END) || (Model.opd != null && Model.opd.isOnOPD == 0 && Model.opd.CreateDate.Date == DateTime.Today))
                                )
                                {
                                    <button type="submit" class="btn btn-success" onclick="disableButton(this)">END SALE</button>
                                }


                                @if (Model.userRole == HospitalMgrSystem.Model.Enums.UserRole.OPDNURSE)
                                {
                                    @if (Model.opd != null)
                                    {
                                        @if (Model.opd.nightShiftSession != null)
                                        {
                                            @if (Model.opd.nightShiftSession.shift == HospitalMgrSystem.Model.Enums.Shift.NIGHT_SHIFT)
                                            {
                                                <button type="submit" class="btn btn-success" onclick="disableButton(this)">END SALE</button>
                                            }
                                        }
                                    }
                                }
                            }
                        }

                    </center>
                </form>
                <center>
                    @if (Model != null)
                    {
                        @if (Model.invoiceID != 0 && Model.total < 0)
                        {
                            @using (Html.BeginForm("Refund", "Cashier", new { Id = Model.invoiceID, Refund = Model.total }, FormMethod.Post))
                            {
                                <table class="table" style="border-collapse: collapse;">
                                    <tr class="table-danger">
                                        <td style="border-bottom: 1px solid white;">USER PASSWORD</td>
                                        <td style="border-bottom: 1px solid white;">
                                            <b>
                                                <input class="form-control danger" type="password" name="userPassword" id="userPassword" placeholder="Enter password"/>
                                            </b>
                                        </td>
                                    </tr>
                                </table>

                                <button id='link_copy' type="submit" class='btn waves-effect waves-light  btn-danger' id="refundButton">Refund</button>
                            }
                        }
                    }

                    @if (Model != null)
                    {
                        @if (Model.invoiceID != 0)
                        {
                            @if (Model.invoice.paymentStatus == HospitalMgrSystem.Model.Enums.PaymentStatus.OPD)
                            {
                                @if (Model.userRole == HospitalMgrSystem.Model.Enums.UserRole.CASHIER)
                                {
                                    @using (Html.BeginForm("MarkAsPaid", "Cashier", new { Id = Model.invoiceID }, FormMethod.Post))
                                    {
                                        <button id='link_copy' type="submit" class='btn waves-effect waves-light  btn-danger' id="markAsPaidButton">Mark as paid</button>
                                    }
                                }
                            }
                        }
                    }

                    <button type="button" id="printButton" onclick=PrintInvoice(); class="btn btn-warning mt-5">PRINT</button>
                </center>
            </div>
        </div>
    </div>


</div>
</div>
<div id="AddShiftModel" class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" style="display: none;">
    <div class="modal-dialog modal-lg" id="AddEditContainerModel">
    </div>
</div>


<div id="AddShiftModel" class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" style="display: none;">
    <div class="modal-dialog modal-lg" id="AddEditContainerModel">
    </div>
</div>

<div id="barcode" hidden>
    <svg id="barcodeSvg"></svg>
</div>