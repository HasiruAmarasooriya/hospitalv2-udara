﻿@using Microsoft.Extensions.Configuration
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model WarehouseDto;
@{
}
@inject IConfiguration Configuration
@section Styles {
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/5.3.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/responsive/2.4.1/css/responsive.dataTables.min.css">


    <style>
        .select2-selection__rendered {
            line-height: 31px !important;
        }

        .select2-container .select2-selection--single {
            height: 35px !important;
        }

        .select2-selection__arrow {
            height: 34px !important;
        }

        <style >
        .modal-content {
            max-width: 90%; /* Ensure the modal stretches to fit more content */
        }

        .table-responsive {
            overflow-x: auto; /* Enable horizontal scrolling */
        }

        .table td, .table th {
            white-space: nowrap; /* Prevent content wrapping inside cells */
            text-align: center; /* Center-align table content */
        }

        .btn {
            padding: 6px 12px; /* Adjust button padding for better fit */
            border: none;
            border-radius: 8px;
            font-size: 14px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin: 5px;
        }

            .btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
            }

        /* Primary button (Add Item) */
        .btn-primary {
            background: linear-gradient(135deg, #6a11cb, #2575fc);
            color: white;
        }

        /* Info button (Add Transfer) */
        .btn-info {
            background: linear-gradient(135deg, #17ead9, #6078ea);
            color: white;
        }

        /* Danger button (Add Supplier) */
        .btn-danger {
            background: linear-gradient(135deg, #ff416c, #ff4b2b);
            color: white;
        }

        /* Warning button (Add Purchase Requisition) */
        .btn-warning {
            background: linear-gradient(135deg, #f9d423, #ff4e50);
            color: white;
        }

        /* Icon styling */
        .btn i {
            margin-right: 8px;
            font-size: 18px;
        }

        /*Table*/

        .table tbody tr:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

        .spark-chart.form-material1 {
            display: flex; /* Use flexbox to align buttons horizontally */
            gap: 2px; /* Add space between buttons */
        }

        .dropdown-menu {
            border: none;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        }



        .modal-dialog {
            max-width: 95%; /* Adjust to fit the modal within the screen */
            max-height: 95%; /* Ensure the modal fits vertically */
        }

        .modal-content {
            overflow-y: auto; /* Add scrolling for the modal content */
        }

        .table-success {
            background-color: aqua;
            color: black;
        }

        .table-danger {
            background-color: #E52020 !important; /* Red */
            color: black; /* Ensure text is visible */
        }

        .table-warning {
            background-color: #d4a017 !important; /* Dark Yellow */
            color: black; /* Ensure text is readable */
        }

        .odd {
            background-color: white !important; /* Dark Yellow */
            color: black; /* Ensure text is readable */
        }

        .even {
            background-color: white !important; /* Dark Yellow */
            color: black; /* Ensure text is readable */
        }

    </style>

        </style>
}

<div class="row page-titles">
    <div class="col-md-5 col-8 align-self-center">
        <h3 class="text-themecolor m-b-0 m-t-0">Manage Waearhouse</h3>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="javascript:void(0)">Home</a></li>
            <li class="breadcrumb-item active">Manage Waearhouse</li>
        </ol>
    </div>

    <div class="col-md-7 col-4 align-self-center">
        <div class="d-flex m-t-10 justify-content-end">
            <div class="d-flex m-r-20 m-l-10 hidden-md-down">
                <div class="spark-chart form-material">
                </div>
                <div class="spark-chart form-material">
                    <button type="button" id="btnCreateItem" class="btn waves-effect waves-light btn-block btn-primary" onclick="AddItem()"><i class="mdi mdi-account-plus"></i>&nbsp;Add Item</button>
                    <button type="button" id="btnCreateTranfer" class="btn waves-effect waves-light btn-block btn-info" onclick="AddTranfer()"><i class="mdi mdi-transfer"></i>&nbsp;Add Tranfer</button>
                    <button type="button" id="btnCreateSupplier" class="btn waves-effect waves-light btn-block btn-danger" onclick="AddGRN()"><i class="mdi mdi-ambulance"></i>&nbsp;Add Supplier</button>
                    <button type="button" id="btnCreatePR" class="btn waves-effect waves-light btn-block btn-danger" onclick="AddPR()"><i class="mdi mdi-ambulance"></i>&nbsp;Add Purchase Requisition</button>

                </div>
            </div>
        </div>
    </div>
</div>
<nav class="navbar navbar-dark bg-primary">
    <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
        <a class="dropdown-item" href="#">Action</a>
        <a class="dropdown-item" href="#">Another action</a>
        <a class="dropdown-item" href="#">Something else here</a>
    </div>
</nav>
@*<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Main Store Item/Drug Purchase Details</h4>
                <div class="table-responsive">
                    <table id="grnTable" class="table table-striped table-bordered dataTable fonts-12" cellspacing="0" width="100%">
                        <thead>
                            <tr>
                                <th>GRPV ID</th>
                                <th>Drug Name</th>
                                <th>Supplier</th>
                                <th>Qty</th>
                                <th>Price</th>
                                <th>Amount</th>
                                <th>Product Date</th>
                                <th>Expire Date</th>

                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var grn in Model.grpvList)
                            {
                                var amount = grn.Qty * grn.Price;
                                <tr>
                                    <td>@grn.Id</td>
                                    <td>@grn.DrugName</td>
                                    <td>@grn.SupplierName</td>
                                    <td>@grn.Qty</td>
                                    <td>@grn.Price</td>
                                    <td>@amount</td>
                                    <td>@grn.ProductDate.ToString("yyyy-MM-dd")</td>
                                    <td>@grn.ExpiryDate.ToString("yyyy-MM-dd")</td>

                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>*@

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Main Store Item/Drug Details</h4>
                <div class="row"></div>
                <div class="table-responsive1">
                    <table id="myTable" class="table table-striped table-bordered dataTable fonts-12" cellspacing="0" width="100%">
                        <thead>
                            <tr>
                                <div class="spark-chart form-material1">
                                    <button type="button" id="lowStockModal" class="btn btn-danger btn-sm" onclick="LowStockItem()">&nbsp;Low Stock</button>
                                    <button type="button" id="ExpiryDate" class="btn btn-warning btn-sm" onclick="ExpiringSoon()">&nbsp;Expiring Soon </button>


                                </div>


                            </tr>


                            <tr>
                                <th>Drug Name</th>
                                <th>Batch Number</th>
                                <th>Stock In</th>
                                <th>Stock Out</th>
                                <th>Available Quantity</th>
                                <th>Price</th>
                                <th>Amount</th>
                                <th>Supplier Name</th>
                                <th>ExpiryDate</th>

                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var stock in Model.MainStore)
                            {

                                <tr class="@(stock.AvailableQuantity <= stock.ReStockLevel ? "table-danger" : stock.ExpiryDate <= DateTime.Now.AddMonths(3) ? "table-warning" :"")">
                                    <td>@stock.DrugName</td>
                                    <td>@stock.BatchNumber</td>
                                    <td>@stock.StockIn</td>
                                    <td>@stock.StockOut</td>
                                    <td>@stock.AvailableQuantity</td>
                                    <td>@stock.Price</td>
                                    <td>@stock.Amount.ToString("0.00")</td>
                                    <td>@stock.SupplierName</td>
                                    <td>@stock.ExpiryDate.ToString("dd-MM-yyyy")</td>


                                </tr>
                            }
                        </tbody>
                    </table>

                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">OPD Store Item/Drug </h4>
                <div class="row"></div>
                <div class="table-responsive1">
                    <table id="myTable1" class="table table-striped table-bordered dataTable fonts-12" cellspacing="0" width="100%">
                        <thead>
                            <tr>
                                <th>Drug Name</th>
                                <th>Batch Number</th>
                                <th>Stock In</th>
                                <th>Stock Out</th>
                                <th>Available Quantity</th>
                                <th>Price</th>
                                <th>Amount</th>
                                <th>Supplier Name</th>
                                <th>ExpiryDate</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var stock in Model.OPDStore)
                            {

                                <tr>
                                    <td>@stock.DrugName</td>
                                    <td>@stock.BatchNumber</td>
                                    <td>@stock.StockIn</td>
                                    <td>@stock.StockOut</td>
                                    <td>@stock.AvailableQuantity</td>
                                    <td>@stock.Price</td>
                                    <td>@stock.Amount.ToString("0.00")</td>
                                    <td>@stock.SupplierName</td>
                                    <td>@stock.ExpiryDate.ToString("dd-MM-yyyy")</td>

                                </tr>
                            }
                        </tbody>
                    </table>

                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">OPD Drugs Transactions </h4>
                <div class="row"></div>
                <div class="table-responsive">
                    <table id="myTable2" class="table table-striped table-bordered dataTable fonts-12" cellspacing="0" width="100%">
                        <thead>
                            <tr>
                                <th>Drug Name</th>
                                <th>Batch Number</th>
                                <th>Stock In</th>
                                <th>Stock Out</th>
                                <th>Refund </th>
                                <th>Price</th>
                                <th>Amount</th>
                                <th>Reference Number</th>
                                <th>ExpiryDate</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var stock in Model.OPDTrans)
                            {

                                <tr>
                                    <td>@stock.DrugName</td>
                                    <td>@stock.BatchNumber</td>
                                    <td>@stock.StockIn</td>
                                    <td>@stock.StockOut</td>
                                    <td>@stock.RefundQty</td>
                                    <td>@stock.Price</td>
                                    <td>@stock.Amount.ToString("0.00")</td>
                                    <td>@stock.RefNumber</td>
                                    <td>@stock.ExpiryDate.ToString("dd-MM-yyyy")</td>

                                </tr>
                            }
                        </tbody>
                    </table>

                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">ETU/Addmission Store Item/Drug</h4>
                <div class="row"></div>
                <div class="table-responsive">
                    <table id="myTable3" class="table table-striped table-bordered dataTable fonts-12" cellspacing="0" width="100%">
                        <thead>
                            <tr>
                                <th>Drug Name</th>
                                <th>Batch Number</th>
                                <th>Stock In</th>
                                <th>Stock Out</th>
                                <th>Refund </th>
                                <th>Available Quantity</th>
                                <th>Price</th>
                                <th>Amount</th>

                                <th>ExpiryDate</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var stock in Model.AddmissionTrans)
                            {

                                <tr>
                                    <td>@stock.DrugName</td>
                                    <td>@stock.BatchNumber</td>
                                    <td>@stock.StockIn</td>
                                    <td>@stock.StockOut</td>
                                    <td>@stock.RefundQty</td>
                                    <td>@stock.AvailableQuantity</td>
                                    <td>@stock.Price</td>
                                    <td>@stock.Amount.ToString("0.00")</td>

                                    <td>@stock.ExpiryDate.ToString("dd-MM-yyyy")</td>

                                </tr>
                            }
                        </tbody>
                    </table>

                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">ETU/Addmission Item/Drug Tranactions</h4>
                <div class="row"></div>
                <div class="table-responsive">
                    <table id="myTable4" class="table table-striped table-bordered dataTable fonts-12" cellspacing="0" width="100%">
                        <thead>
                            <tr>
                                <th>Drug Name</th>
                                <th>Batch Number</th>
                                <th>Stock In</th>
                                <th>Stock Out</th>
                                <th>Available Quantity</th>
                                <th>Price</th>
                                <th>Amount</th>
                                <th>Reference Number</th>
                                <th>ExpiryDate</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var stock in Model.AddmissionTrans)
                            {

                                <tr>
                                    <td>@stock.DrugName</td>
                                    <td>@stock.BatchNumber</td>
                                    <td>@stock.StockIn</td>
                                    <td>@stock.StockOut</td>
                                    <td>@stock.AvailableQuantity</td>
                                    <td>@stock.Price</td>
                                    <td>@stock.Amount.ToString("0.00")</td>
                                    <td>@stock.RefNumber</td>
                                    <td>@stock.ExpiryDate.ToString("dd-MM-yyyy")</td>

                                </tr>
                            }
                        </tbody>
                    </table>

                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Supplier Details</h4>
                <div class="table-responsive">
                    <table id="grnTable" class="table table-striped table-bordered dataTable fonts-12" cellspacing="0" width="100%">
                        <thead>
                            <tr>
                                <th>GRN ID</th>
                                <th>Name</th>
                                <th>Contact Details</th>
                                <th>Address</th>

                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var grn in Model.supplierList)
                            {
                                <tr>
                                    <td>@grn.Id</td>
                                    <td>@grn.SupplierName</td>
                                    <td>@grn.SupplierContact</td>
                                    <td>@grn.SupplierAddress</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Item/Drug Purchase Requisition</h4>
                <div class="table-responsive">
                    <table id="grnTable1" class="table table-striped table-bordered dataTable fonts-12" cellspacing="0" width="100%">
                        <thead>
                            <tr>
                                <th>Request ID</th>
                                <th>Request By</th>
                                <th>Request Date</th>
                                <th>View Items</th>
                                <th>Action </th>


                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var request in Model.RqeuestList)
                            {
                                <tr>
                                    <td>@request.RequestID</td>
                                    <td>@request.CreatedBy</td>
                                    <td>@request.CreateDate.ToString("dd-MM-yyyy")</td>
                                    <td>
                                        <button class="btn btn-primary btn-sm toggle-items" data-target="items-@request.RequestID">
                                            View Items
                                        </button>
                                    </td>
                                    <td>
                                        <button class="btn btn-primary btn-sm toggle-items" onclick="printRequest(@request.RequestID)">
                                            Print
                                        </button>
                                    </td>
                                </tr>
                                <tr id="items-@request.RequestID" class="items-row" style="display:none;">
                                    <td colspan="4">
                                        <div class="p-3 bg-light border rounded">
                                            <h5>Items</h5>
                                            <table class="table table-sm table-bordered">
                                                <thead>
                                                    <tr>
                                                        <th>Drug Name</th>
                                                        <th>Quantity</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var item in request.Items)
                                                    {
                                                        <tr>
                                                            <td>@item.DrugName</td>
                                                            <td>@item.Quantity</td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="AddShiftModel" class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" style="display: none;">
    <div class="modal-dialog modal-lg" id="AddEditContainerModel">
    </div>
</div>




@section scripts {

    <script>

                $(document).ready(function () {
                    $('#myTable').DataTable({
                        responsive: true,
                        paging: true, // Enable pagination
                        searching: true, // Enable search functionality
                        ordering: true, // Enable column sorting
                    });
                    $('#myTable1').DataTable({
                       responsive: true,
                       paging: true, // Enable pagination
                       searching: true, // Enable search functionality
                       ordering: true, // Enable column sorting
                     });
                    $('#myTable2').DataTable({
                      responsive: true,
                      paging: true, // Enable pagination
                      searching: true, // Enable search functionality
                      ordering: true, // Enable column sorting
                     });
                    $('#myTable3').DataTable({
                       responsive: true,
                       paging: true, // Enable pagination
                       searching: true, // Enable search functionality
                       ordering: true, // Enable column sorting
                     });
                    $('#myTable4').DataTable({
                      responsive: true,
                      paging: true, // Enable pagination
                      searching: true, // Enable search functionality
                      ordering: true, // Enable column sorting
                     });
                   $('#grnTable').DataTable({
                       responsive: true,
                       paging: true, // Enable pagination
                       searching: true, // Enable search functionality
                       ordering: true, // Enable column sorting
                    });

                });


                   function select_onchange(value, element) {
                    const commonUrl = @Json.Serialize(@Configuration.GetSection("MainAPI").GetSection("APIURL").Value);

                    var settings = {
                        "url": commonUrl + "Drugs/GetAllDrugsSubCategoryById?CategoryID=" + value,
                        "method": "GET",
                        "headers": {
                            "Accept": "application/json",
                            "Content-Type": "application/json"
                        },
                    };

                    $.ajax(settings).done(function (response) {
                        console.log(response);

                        // Find the corresponding subcategory dropdown relative to the triggering element
                        const row = $(element).closest('tr');
                        const select = row.find('#dropSubCategory');

                        // Clear existing options except the default
                        select.find('option:not(:first)').remove();

                        // Populate the dropdown with new options
                        for (let item of response) {
                            select.append(new Option(item.drugsSubCategoryName, item.drugsSubCategoryId));
                        }
                    });
                }

                        $(document).on('change', '#requestId', function () {
            var requestId = $(this).val();
            console.log('Selected Request ID:', requestId);

            if (requestId) {
                $.ajax({
                            url: '/Stock/RequestDetails', // Replace with your controller URL
                    type: 'POST',
                    data: { requestId: requestId },
                    success: function (response) {
                        console.log('Response:', response);

                        if (response && response.data) {
                            var tableBody = $('#drugTableBody');
                            tableBody.empty(); // Clear existing rows
                            response.data.forEach(function (item) {
                                addDrugRow(item.drugID, item.requestId, item.drugName, item.quantity, '', '', '', '', '', '', '','');
                            });
                            console.log('Table updated with editable fields.');
                        } else {
                            alert('No drugs found for the selected Request ID.');
                        }
                    },
                    error: function () {
                        alert('An error occurred while fetching the drug list.');
                    }
                });
            } else {
                $('#drugTableBody').empty(); // Clear table if no request ID is selected
            }
        });
                 function addDrugRow(drugId,requestId, drugName, quantity, supplier, productDate, expiryDate, price, batchNumber, serialNumber,ReStockLevel) {
            var row = `
                <tr>
                                      <input type="hidden" id="drugId" value="${drugId}" />
                                      <input type="hidden" id="requestId" value="${requestId}" />
                                      <td><input type="text" id="drugName" class="form-control" value="${drugName}" placeholder="Drug Name" readonly /></td>
                                      <td><input type="number" id="quantity" class="form-control" value="${quantity}" placeholder="Quantity"  /></td>
                                      <td>
                                                <select id="supplier" class="form-control ddlSearchList">
                                                <option value="">Select Supplier</option>
        @foreach (var supplier in Model.supplierList)
        {
                <option value="@supplier.Id">@supplier.SupplierName </option>
                                                    
        }</select>
                                        </td>
                                    <td><input type="date" id="productDate" class="form-control" value="${productDate}" /></td>
                                    <td><input type="date" id="expiryDate" class="form-control" value="${expiryDate}" /></td>
                                    <td><input type="text" id="price" class="form-control" value="${price}" placeholder="Price" /></td>
                                    <td><input type="text" id="batchNumber" class="form-control" value="${batchNumber}" placeholder="Batch Number" /></td>
                                    <td><input type="text" id="serialNumber" class="form-control" value="${serialNumber}" placeholder="Serial Number" /></td>
                                    <td><input type="text" id="restock" class="form-control" value="${ReStockLevel}" placeholder="ReStck - Level" /></td>
                                    <td>
                                                    <select class="form-control ddlSearchList" onchange="javascript:select_onchange(this.value, this);" asp-for="Drug.DrugsCategoryId" id="dropCategory">
                                        <option value="">Please Select</option>
        @foreach (var item in Model.DrugsCategory)
        {
                                                    <option value="@item.DrugsCategoryId">@item.Category</option>
        }
                                        </select>
                                      </td>
                                     <td>
                                     <select class="form-control ddlSearchList" asp-for="Drug.DrugsSubCategoryId" id="dropSubCategory">
                                        <option value="">Please Select</option>

        @if (Model.DrugsSubCategory != null)
        {
            @foreach (var item in Model.DrugsSubCategory)
            {
                                                                    <option value="@item.DrugsSubCategoryId">@item.DrugsSubCategoryName</option>
            }
        }
                                      </select>
                                       </td>
                                      <td> <input class="form-check-input" type="checkbox" asp-for="Drug.IsDiscountAvailable" id="discount" name="discount"/></td>
                                      <td><button type="button" id="saveChangesButton" class="btn btn-primary" onclick="addDrugs(this)">Add Drug</button></td>
                </tr>
            `;
            $('#drugTableBody').append(row);
        }

                // Delete Row
                $(document).on('click', '.delete-row', function () {
                    $(this).closest('tr').remove();
                });

                // Validate form before submit
                $('form').on('submit', function (e) {
                    var isValid = true;
                    $('#drugTableBody tr').each(function () {
                        $(this).find('input, select').each(function () {
                            if (!$(this).val()) {
                                isValid = false;
                                $(this).addClass('is-invalid');
                            } else {
                                $(this).removeClass('is-invalid');
                            }
                        });
                    });

                    if (!isValid) {
                        e.preventDefault();
                        alert('Please fill in all fields.');
                    }
                });

                    document.addEventListener('DOMContentLoaded', function () {
                        const buttons = document.querySelectorAll('.toggle-items');

                        buttons.forEach(button => {
                            button.addEventListener('click', function () {
                                const targetId = this.getAttribute('data-target');
                                const targetRow = document.getElementById(targetId);

                                // Toggle the display of the items
                                if (targetRow.style.display === 'none' || targetRow.style.display === '') {
                                    targetRow.style.display = 'table-row';  // Show the items
                                    this.textContent = 'Hide Items';  // Change button text
                                } else {
                                    targetRow.style.display = 'none';  // Hide the items
                                    this.textContent = 'View Items';  // Change button text
                                }
                            });
                        });
                    });

                var drugusList = [];

                function AddItem() {
                    $.ajax({
                        type: "POST",
                        url: "/Stock/CreateItem",  // URL to the action method in the controller
                        data: {},  // You can pass additional data here if needed
                        success: function (response) {
                            // Insert the partial view content into the modal's body
                            $("#AddEditContainerModel").html(response);
                            // Show the modal
                            $("#AddShiftModel").modal('show');
                        },
                        error: function (response) {
                            alert("Error loading the form. Please try again.");
                        }
                    });
                }
                        function LowStockItem() {
                            $.ajax({
                                type: "GET",
                                url: "/Stock/LowStockItem",  // URL to the action method in the controller
                                data: {},  // You can pass additional data here if needed
                                success: function (response) {
                                      // Insert the partial view content into the modal's body
                                              $("#AddEditContainerModel").html(response);
                                            // Show the modal
                                            $("#AddShiftModel").modal('show');
                                        },
                                        error: function (response) {
                                            alert("Error loading the form. Please try again.");
                                        }
                                    });
                                }
                            function ExpiringSoon() {
                                    $.ajax({
                                        type: "GET",
                                        url: "/Stock/ExpiringSoon",  // URL to the action method in the controller
                                        data: {},  // You can pass additional data here if needed
                                        success: function (response) {
                                              // Insert the partial view content into the modal's body
                                                      $("#AddEditContainerModel").html(response);
                                                    // Show the modal
                                                    $("#AddShiftModel").modal('show');
                                                },
                                                error: function (response) {
                                                    alert("Error loading the form. Please try again.");
                                                }
                                            });
                                        }
                function AddPR() {
                    $.ajax({
                        type: "POST",
                        url: "/Stock/CreatePurchaseRquest",  // URL to the action method in the controller
                        data: {},  // You can pass additional data here if needed
                        success: function (response) {
                            // Insert the partial view content into the modal's body
                            $("#AddEditContainerModel").html(response);
                            // Show the modal
                            $("#AddShiftModel").modal('show');
                        },
                        error: function (response) {
                            alert("Error loading the form. Please try again.");
                        }
                    });
                }
                function AddTranfer() {
                    $.ajax({
                        type: "POST",
                        url: "/Stock/CreateTranfer",  // URL to the action method in the controller
                        data: {},  // You can pass additional data here if needed
                        success: function (response) {
                            // Insert the partial view content into the modal's body
                            $("#AddEditContainerModel").html(response);
                            // Show the modal
                            $("#AddShiftModel").modal('show');
                        },
                        error: function (response) {
                            alert("Error loading the form. Please try again.");
                        }
                    });
                }
                function AddGRN() {
                    $.ajax({
                        type: "POST",
                        url: "/Stock/CreateGRN",  // URL to the action method in the controller
                        data: {},  // You can pass additional data here if needed
                        success: function (response) {
                            // Insert the partial view content into the modal's body
                            $("#AddEditContainerModel").html(response);
                            // Show the modal
                            $("#AddShiftModel").modal('show');
                        },
                        error: function (response) {
                            alert("Error loading the form. Please try again.");
                        }
                    });
                }

                function addDrugusItem() {
                    // var opdID = document.getElementById("opid").value;
                    var drugId = document.getElementById("drugId").value;
                    var qty = document.getElementById("txtQty").value;


                    // document.getElementById("total").value = total;

                    console.log(drugId);
                    console.log(qty);

                    // Create a new drugus item and add it to the list
                    var drugusItem = {
                        DrugId: drugId,
                        Quntity: qty,

                    };
                    drugusList.push(drugusItem);

                    // Append the item to the table
                    var tableBody = document.getElementById("tblBodyPayments2");
                    var newRow = tableBody.insertRow();
                    var cell1 = newRow.insertCell(0);
                    var cell2 = newRow.insertCell(1);
                    var cell3 = newRow.insertCell(2);
                    var cell4 = newRow.insertCell(3);
                    var cell5 = newRow.insertCell(4);

                    cell1.innerHTML = document.getElementById("drugId").options[document.getElementById("drugId").selectedIndex].text;
                    cell2.innerHTML = qty;


                    // Add a delete button for each row
                    var deleteButton = document.createElement("button");
                    deleteButton.className = "btn waves-effect waves-light btn-xs btn-danger";
                    deleteButton.innerHTML = "<i class='fa fa-trash'></i>";
                    deleteButton.onclick = function () {
                        // Find the closest row and delete it
                        var rowIndex = this.closest("tr").rowIndex;
                        drugusList.splice(rowIndex - 1, 1);
                        tableBody.deleteRow(rowIndex - 1);

                        // Update the total

                    };
                    cell5.appendChild(deleteButton);

                    // Clear input fields
                    document.getElementById("drugId").value = "0";
                    document.getElementById("txtQty").value = "";

                }
           function addDrugs(button) {
                   // Loop through all rows in #drugTableBody
                 var row = $(button).closest("tr"); //Current row

                        //Extract data from the current row
                        var drugId = row.find(`#drugId`).val();
                        var requestId = row.find(`#requestId`).val();
                        var drugName = row.find(`#drugName`).val();
                        var quantity = row.find(`#quantity`).val();
                        var supplier = row.find(`#supplier`).val();
                        var supplierName = row.find(`#supplier option:selected`).text(); //Get selected supplier's name
                        var productDate = row.find(`#productDate`).val();
                        var expiryDate = row.find(`#expiryDate`).val();
                        var price = row.find(`#price`).val();
                        var batchNumber = row.find(`#batchNumber`).val();
                        var serialNumber = row.find(`#serialNumber`).val();
                        var category = row.find(`#dropCategory`).val();
                        var subCategory = row.find(`#dropSubCategory`).val();
                        var discount = row.find(`#discount`).val();
                        var restock =row.find(`#restock`).val();
                        //Validate the extracted data

                                var Items = [];
                        //Create an Item object for later use (if needed)
                        var Item = {
                            DrugId: drugId,
                            RequestId: requestId,
                            Qty: quantity,
                            GRNId: supplier,
                            BatchNumber: batchNumber,
                            SerialNumber: serialNumber,
                            ReStockLevel : restock,
                            Price: price,
                            ExpireDate: expiryDate,
                            ProductDate: productDate,
                                    Category: category,
                                    SubCategory : subCategory,
                                    Discount :discount
                        };
                                        Items.push(Item);
                                console.log("Extracted Item:", Items); //Debugging purposes
            var newRow = `
                <tr>
                    <td>${drugName}</td>
                    <td>${quantity}</td>
                    <td>${supplierName}</td>
                    <td>${productDate}</td>
                    <td>${expiryDate}</td>
                    <td>${price}</td>
                    <td>${batchNumber}</td>
                    <td>${serialNumber}</td>
                    <td>${restock}</td>
                    <td>
                                    <input type="hidden" class="drugId"  value="${drugId}" />
                                    <input type="hidden" class="requestId" id="requestId" value="${requestId}" />
                        <input type="hidden" class="supplier" value="${supplier}" />
                        <input type="hidden" class="category" value="${category}" />
                        <input type="hidden" class="subCategory" value="${subCategory}" />
                        <input type="hidden" class="discount" value="${discount}" />
                        <button type="button" class="btn btn-danger btn-sm delete-row">Delete</button>
                    </td>
                </tr>
            `;
            $("#ItemTableBody").append(newRow);

                        //Optionally, clear the current row's inputs
                        row.find('input, select').val('');


                   // Optionally, clear #drugTableBody after processing all rows

                }


                // Delete Row
           $(document).on("click", ".delete-row", function () {
            // Get the closest table containing the row
            var table = $(this).closest('table');

            // Remove the row
            $(this).closest("tr").remove();

            // Check if the table is empty
            if (table.find('tbody tr').length === 0) {
                // If no rows left in the table, show the table again
                table.show();
            }
           });
        function collectItems() {
            var items = [];
            $("#ItemTableBody tr").each(function () {
                var row = $(this);
                var item = {
                    DrugID: parseInt(row.find('input.drugId').val() || 0),
                    RequestId: parseInt(row.find('input.requestId').val() || 0),
                    Qty: parseInt(row.find('td:nth-child(2)').text() || 0),
                    GRNId: parseInt(row.find('input.supplier').val() || 0),
                    BatchNumber: row.find('td:nth-child(7)').text().trim(),
                    SerialNumber: row.find('td:nth-child(8)').text().trim(),
                    ReStockLevel: parseFloat(row.find('td:nth-child(9)').text().replace(',', '.') || 0),
                    Price: parseFloat(row.find('td:nth-child(6)').text().replace(',', '.') || 0),
                    ExpireDate: row.find('td:nth-child(5)').text().trim(), // Ensure this is in yyyy-MM-dd
                    ProductDate: row.find('td:nth-child(4)').text().trim(),
                    Category: parseInt(row.find('input.category').val() || 0),
                    SubCategory: parseInt(row.find('input.subCategory').val() || 0),
                    Discount: row.find('input.discount').val() === "1" // Boolean
                };
                items.push(item);
            });
            console.log('Collected Items:', items);
            return items;
        }

        function submitItems() {
            var items = collectItems();
            console.log('submit items', items);
            if (items.length === 0) {
                alert("No items to submit!");
                return;
            }

            var grpvDto = {
                Items: items
            };

            $.ajax({
                url: '/Stock/AddItem',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(grpvDto),
                success: function (response) {
                    if (response.success) {
                        alert(response.message);
                        window.location.href = '/Stock/Index';
                    } else {
                        alert("Error: " + response.message);
                        console.log(response.errors);
                    }
                },
                error: function (xhr, status, error) {
                    alert("An error occurred while submitting the data: " + error);
                    console.log(xhr.responseText);
                }
            });
        }

                    function checkAndAddDrug() {
                    const drugName = document.getElementById('drugName').value.trim();

                    if (drugName === '') {
                        alert('Please enter a drug name.');
                        return;
                    }
                            console.log('Checking drug:', drugName);
                    $.ajax({
                        url: '/Stock/CheckAndAddDrug', // Endpoint for checking/adding drug
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ drugName: drugName }),
                        success: function(response) {
                            if (response.success) {
                                // alert('Drug processed successfully.');

                                // Add the drug to the purchase request list
                                const drugId = response.data.drugId;
                                addDrugToPR(drugId, drugName);
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function() {
                            alert('Error occurred while processing the drug.');
                        }
                    });
                }

                function addDrugToPR(drugId, drugName) {
                    // Add the drug to your purchase request
                    const qty = document.getElementById('txtQty').value;

                    const drugusItem = {
                        DrugId: drugId,
                        Quntity: qty,
                    };
                    drugusList.push(drugusItem);

                    // Update the UI
                    const tableBody = document.getElementById('tblBodyPayments2');
                    const newRow = tableBody.insertRow();
                    const cell1 = newRow.insertCell(0);
                    const cell2 = newRow.insertCell(1);
                    const cell3 = newRow.insertCell(2);

                    cell1.innerHTML = drugName;
                    cell2.innerHTML = qty;

                    // Clear input fields
                    document.getElementById('drugName').value = '';
                    document.getElementById('txtQty').value = '';
                }

           function submitDrugusItems() {
                    var opdDtoObject = {
                        Items: drugusList

                    };

                    $.ajax({
                        type: 'POST',
                        url: '/Stock/AddPurchaseRequest',
                        contentType: 'application/json',
                        data: JSON.stringify(opdDtoObject),
                        success: function (response) {
                            alert(response.message);
                            // Reload the page or update UI dynamically
                            location.reload();
                        },
                        error: function () {
                            alert("Error occurred while adding the purchase request.");
                        }
                    });
            }

           function preloadImage(url) {
            return new Promise((resolve, reject) => {
                const img = new Image();
                img.onload = resolve;
                img.onerror = reject;
                img.src = url;
            });
        }

        function printRequest(requestId) {
            const imageUrl = "https://kumuduhospital.com/assets/images/kumudu_logo2.jpg";

            preloadImage(imageUrl)
                .then(() => {
                    $.ajax({
                        type: 'POST',
                        url: '/Stock/PrintRequest',
                        data: { requestId: requestId },
                        success: function (response) {
                            var printWindow = window.open();
                            printWindow.document.write(response);
                            printWindow.document.close();
                            printWindow.focus();
                            printWindow.print();
                            printWindow.close();
                        },
                        error: function (xhr, status, error) {
                            console.error('Error fetching print data:', error);
                            alert('Failed to load print data. Please try again.');
                        }
                    });
                })
                .catch(() => {
                    alert('Failed to load the logo image.');
                });
        }

    </script>


}